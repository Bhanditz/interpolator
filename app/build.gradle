apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

def isCircle = "true".equals(System.getenv("CIRCLECI"))

ext.signing = [storeFilePath: "path/to/keystore",
               storePassword: "keystore password",
               keyAlias     : "key alias",
               keyPassword  : "key password"]

if (file('signing.gradle').exists()) {
  apply from: 'signing.gradle'
}


android {
  compileSdkVersion 25
  buildToolsVersion "25.0.2"
  defaultConfig {
    applicationId "$application_id"
    minSdkVersion 19
    targetSdkVersion 25
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  signingConfigs {
    release {
      storeFile file(project.signing.storeFilePath)
      storePassword project.signing.storePassword
      keyAlias project.signing.keyAlias
      keyPassword project.signing.keyPassword
    }
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      if (isCircle) {
        // The release build generated on CircleCI doesn't need to be signed with our real
        // keystore - we just need a release build to verify that it compiles. Using the
        // debug keystore means we don't have to expose our keystore.
      } else {
        signingConfig signingConfigs.release
      }
    }
  }



  lintOptions {
    abortOnError false
  }

  sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
    test.java.srcDirs += 'src/test/kotlin'
  }
}

ext {
  supportLibraryVersion = '25.0.1'
}

dependencies {
  compile fileTree(dir: 'libs', include: ['*.jar'])

  //kotlin
  compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
  compile 'org.jetbrains.anko:anko-common:0.8.3'

  //android
  compile "com.android.support:appcompat-v7:${supportLibraryVersion}"
  compile "com.android.support:design:${supportLibraryVersion}"
  compile "com.android.support:recyclerview-v7:${supportLibraryVersion}"

  //unit tests
  testCompile 'junit:junit:4.12'
  testCompile 'org.robolectric:robolectric:3.0'
  testCompile 'org.mockito:mockito-core:1.10.5'
  testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
  testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
  testCompile "com.nhaarman:mockito-kotlin:1.1.0"

  //automation tests
  androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
  androidTestCompile 'com.android.support.test:runner:0.5'
  androidTestCompile "com.android.support:support-annotations:${supportLibraryVersion}"

  //networking
  compile 'com.squareup.retrofit2:retrofit:2.0.0'
  compile 'com.squareup.retrofit2:converter-gson:2.0.0'
  compile 'com.squareup.okhttp3:logging-interceptor:3.0.1'
  compile 'com.squareup.retrofit2:adapter-rxjava:2.0.0'

  //image caching and downloading
  compile 'com.squareup.picasso:picasso:2.5.2'

  //rx
  compile 'io.reactivex:rxjava:1.1.6'
  compile 'io.reactivex:rxandroid:1.1.0'
  compile 'com.jakewharton.rxbinding:rxbinding-recyclerview-v7:0.4.0'


  //custom fonts
  compile 'uk.co.chrisjenx:calligraphy:2.1.0'
}
